name: "CI Pipeline"

on: [push]
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: 'hitchlog_api_test'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'password'
    env:
      RAILS_ENV: test
      DB_PASSWORD: password
      DB_USER: postgres
      DEVISE_JWT_SECRET_KEY: 1233123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123919123912391231231231231231e36
    steps:
    - name: Install required apt packages
      run: |
        sudo apt-get -y install libpq-dev
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1.2' # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Setup cache key and directory for gems cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
    # Install local deps if this action is being run locally
    - name: Install local dependencies
      if: ${{ env.ACT }}
      run: |
        sudo apt-get update
        sudo apt-get -yqq install libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev libasound2 libxshmfence-dev postgresql postgresql-contrib
    - name: Boot local dependencies
      if: ${{ env.ACT }}
      run: |
        sudo service postgresql start
    - name: Configure local dependencies
      if: ${{ env.ACT }}
      run: |
        sudo -u postgres psql -U postgres -d postgres -c "alter user postgres with password 'password';"
    - name: checkout code
      uses: actions/checkout@v3
    - run: bundle install
    - if: ${{ env.ACT }}
      run: bundle exec rake db:create
    - run: bundle exec rake db:schema:load
    - run: bundle exec rake db:migrate
    - run: bundle exec rake
  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only

